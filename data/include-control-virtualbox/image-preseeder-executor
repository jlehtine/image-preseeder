#! /bin/sh
### BEGIN INIT INFO
# Provides:          image-preseeder-executor
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Image Preseeder executor script
# Description:       Executes externally specified commands on virtual machine startup.
### END INIT INFO

# Based on /etc/init.d/skeleton from Ubuntu 12.04

# Image Preseeder, a tool to create preseeded Linux installation images
# Copyright 2013 Johannes Lehtinen
#
# Licensed under the MIT License, see LICENSE.md.

# Do NOT "set -e"

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Image Preseeder executor"
NAME=image-preseeder-executor
SCRIPTNAME=/etc/init.d/$NAME
SHARENAME=$NAME
MNTPOINT=/$SHARENAME

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
    # Attempt to mount share
    mkdir $MNTPOINT || return 2
    if mount -t vboxsf $SHARENAME $MNTPOINT; then

        # If mounting succeeds then check if executable script found
        execute=$MNTPOINT/execute
        if [ -x "$execute" ]; then

            # Execute command and log output
            $MNTPOINT/execute < /dev/null > $execute.log 2>&1 || return 2
        fi
        umount $MNTPOINT || return 2
    fi
    rmdir $MNTPOINT || return 2
}

#
# Function that stops the daemon/service
#
do_stop()
{
	true
}

case "$1" in
  start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop}" >&2
	exit 3
	;;
esac

:
